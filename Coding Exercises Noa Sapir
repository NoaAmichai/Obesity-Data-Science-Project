{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "4b04d957",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Binary: 1001011\n",
      "Hexadecimal(base 16): 004B\n",
      "in octal(base 8) 0o113\n"
     ]
    }
   ],
   "source": [
    "x = 75 ##Bases\n",
    "b = \"{0:b}\".format(x)\n",
    "print('Binary: ' +(b))\n",
    "str(b)\n",
    "print(\"Hexadecimal(base 16): \"+ \"{0:0>4X}\".format(int(b, 2)))\n",
    "print(\"in octal(base 8)\",oct(x),)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "9cbf3bbf",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "tl = pd.read_csv(\"C:/Users/noasa/OneDrive/שולחן העבודה/מדמח/מבוא למדעי הנתונים/פרויקט/דאטה סט לעבודת יחיד פרוייקט גמר.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "5adfc337",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>The Rising Son</td>\n",
       "      <td>1990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ashes of Kukulcan</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>The Thousand Plane Raid</td>\n",
       "      <td>1969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Crucea de piatra</td>\n",
       "      <td>1993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>The 86</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     title  year\n",
       "0           The Rising Son  1990\n",
       "1        Ashes of Kukulcan  2016\n",
       "2  The Thousand Plane Raid  1969\n",
       "3         Crucea de piatra  1993\n",
       "4                   The 86  2015"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tl.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "0efb4027",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "19"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tl['title'].value_counts()['Hamlet']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "523e4e3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "cs = pd.read_csv(\"C:/Users/noasa/OneDrive/שולחן העבודה/מדמח/מבוא למדעי הנתונים/פרויקט/cast.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "72eb66c7",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>year</th>\n",
       "      <th>name</th>\n",
       "      <th>type</th>\n",
       "      <th>character</th>\n",
       "      <th>n</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Suuri illusioni</td>\n",
       "      <td>1985</td>\n",
       "      <td>Homo $</td>\n",
       "      <td>actor</td>\n",
       "      <td>Guests</td>\n",
       "      <td>22.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Gangsta Rap: The Glockumentary</td>\n",
       "      <td>2007</td>\n",
       "      <td>Too $hort</td>\n",
       "      <td>actor</td>\n",
       "      <td>Himself</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Menace II Society</td>\n",
       "      <td>1993</td>\n",
       "      <td>Too $hort</td>\n",
       "      <td>actor</td>\n",
       "      <td>Lew-Loc</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Porndogs: The Adventures of Sadie</td>\n",
       "      <td>2009</td>\n",
       "      <td>Too $hort</td>\n",
       "      <td>actor</td>\n",
       "      <td>Bosco</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Stop Pepper Palmer</td>\n",
       "      <td>2014</td>\n",
       "      <td>Too $hort</td>\n",
       "      <td>actor</td>\n",
       "      <td>Himself</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                               title  year       name   type character     n\n",
       "0                    Suuri illusioni  1985     Homo $  actor    Guests  22.0\n",
       "1     Gangsta Rap: The Glockumentary  2007  Too $hort  actor   Himself   NaN\n",
       "2                  Menace II Society  1993  Too $hort  actor   Lew-Loc  27.0\n",
       "3  Porndogs: The Adventures of Sadie  2009  Too $hort  actor     Bosco   3.0\n",
       "4                 Stop Pepper Palmer  2014  Too $hort  actor   Himself   NaN"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cs.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "cabe4153",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>191379</th>\n",
       "      <td>Treasure Island</td>\n",
       "      <td>1918</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47769</th>\n",
       "      <td>Treasure Island</td>\n",
       "      <td>1920</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192917</th>\n",
       "      <td>Treasure Island</td>\n",
       "      <td>1934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90175</th>\n",
       "      <td>Treasure Island</td>\n",
       "      <td>1950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104714</th>\n",
       "      <td>Treasure Island</td>\n",
       "      <td>1972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103646</th>\n",
       "      <td>Treasure Island</td>\n",
       "      <td>1973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190792</th>\n",
       "      <td>Treasure Island</td>\n",
       "      <td>1985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166675</th>\n",
       "      <td>Treasure Island</td>\n",
       "      <td>1999</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  title  year\n",
       "191379  Treasure Island  1918\n",
       "47769   Treasure Island  1920\n",
       "192917  Treasure Island  1934\n",
       "90175   Treasure Island  1950\n",
       "104714  Treasure Island  1972\n",
       "103646  Treasure Island  1973\n",
       "190792  Treasure Island  1985\n",
       "166675  Treasure Island  1999"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tl[tl.title == 'Treasure Island'].sort_values('year')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "69b1e3bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(cs[(cs.title == \"Hamlet\") & (cs.year == 1921)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "a3d54dc8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "tl['decade'] = ((tl.year // 10) * 10)\n",
    "tl[tl.title=='Hamlet'].decade.value_counts().sort_index().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "dd6aa872",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "actor      6388\n",
       "actress    2813\n",
       "Name: type, dtype: int64"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#How many leading (n=1) roles were available to actors, and how many to actresses, in each year of the 1950s?\n",
    "cs[(cs.year//10==195)&(cs.n==1)].type.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "53edd4e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "name\n",
       "Mohanlal              126\n",
       "Mammootty             118\n",
       "Akshay Kumar           87\n",
       "Jayaram                76\n",
       "Andy Lau               72\n",
       "Ajay Devgn             69\n",
       "Amitabh Bachchan       68\n",
       "Eric Roberts           68\n",
       "Nagarjuna Akkineni     60\n",
       "Dilip                  59\n",
       "Name: n, dtype: int64"
      ]
     },
     "execution_count": 204,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#List the 10 actors/actresses that have the most leading roles (n=1) since the 1990's\n",
    "new = cs.loc[((cs['n'] == 1)) & (cs['year'] >= 1990)].groupby('name').count()['n'].sort_values(ascending=False)\n",
    "new.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "2d16b132",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "title                                           year\n",
       "An American Werewolf in London                  1981     True\n",
       "Blues Brothers 2000                             1998    False\n",
       "Innocent Blood                                  1992    False\n",
       "Inside Out                                      2015    False\n",
       "Labyrinth                                       1986    False\n",
       "Monsters, Inc.                                  2001    False\n",
       "Muppet Treasure Island                          1996     True\n",
       "Muppets from Space                              1999     True\n",
       "Sesame Street Presents: Follow that Bird        1985     True\n",
       "Spies Like Us                                   1985    False\n",
       "Star Wars: Episode I - The Phantom Menace       1999    False\n",
       "Star Wars: Episode II - Attack of the Clones    2002    False\n",
       "Star Wars: Episode III - Revenge of the Sith    2005    False\n",
       "Star Wars: Episode V - The Empire Strikes Back  1980    False\n",
       "Star Wars: Episode VI - Return of the Jedi      1983    False\n",
       "Superman III                                    1983    False\n",
       "The Adventures of Elmo in Grouchland            1999     True\n",
       "The Blues Brothers                              1980    False\n",
       "The Dark Crystal                                1982     True\n",
       "The Great Muppet Caper                          1981     True\n",
       "The Muppet Christmas Carol                      1992     True\n",
       "The Muppet Movie                                1979     True\n",
       "The Muppets Take Manhattan                      1984     True\n",
       "Trading Places                                  1983    False\n",
       "Zathura: A Space Adventure                      2005    False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 185,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cs[cs.name=='Frank Oz'].groupby(['title','year']).size()>1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a8ca49df",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
